name: deploy-to-ec2
on: [push,workflow_dispatch]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Add gmail credentials
        run: echo $GMAIL_CREDENTIAL_JSON > src/main/resources/credentials.json
        shell: bash
        env:
          GMAIL_CREDENTIAL_JSON: ${{ secrets.GMAIL_CREDENTIAL_JSON }}

      - run: mvn clean verify test

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'add-known-hosts-in-next-command'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy jar with rsync
        run: rsync -avP ./target/Football-1.0-SNAPSHOT-jar-with-dependencies.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/football-core_${GITHUB_SHA::8}.jar

      - name: CREATE CRON -> Generate new Prediction & Update cron. Loads the environment variables from .environment, then runs the PredictionPipeline, appending the output of the command to a log file.
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -q "echo '12 2 * * * . ~/.environment; java -cp ~/football-core_${GITHUB_SHA::8}.jar com.footballbettingcore.taskScheduling.PredictPipeline >> ~/logs/predict.log 2>&1' > ~/crontab.txt"

      - name: CREATE CRON -> Generate new DB Integrity cron. Loads the environment variables from .environment, then runs the DbIntegrityCheck, appending the output of the command to a log file.
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -q "echo '00 5 * * * . ~/.environment; java -cp ~/football-core_${GITHUB_SHA::8}.jar com.footballbettingcore.taskScheduling.DbIntegrityCheck >> ~/logs/dbIntegrity.log 2>&1' >> ~/crontab.txt"

      - name: Set new crontab
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -q "crontab ~/crontab.txt"

      - name: Remove old jars, but keep the most recent in case there are any commands running. (The latest jar on the system is kept in the awk command and the jar from this deployment is ignored via the mmin arg)
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -q "find . -name 'football-core*' -mmin +5 -printf '%T@ %p\n' | sort -nr | cut -f 2 -d ' ' | awk 'NR>1' | xargs rm -f"

      - name: Decode gmail token
        run: mkdir tokens; echo -n $GMAIL_STORED_CREDENTIAL | base64 --decode > tokens/StoredCredential
        shell: bash
        env:
          GMAIL_STORED_CREDENTIAL: ${{ secrets.GMAIL_STORED_CREDENTIAL }}

      - name: Transfer gmail token to VM
        run: rsync -avP ./tokens ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~
