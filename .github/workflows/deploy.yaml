name: deploy-to-ec2
on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11

      - run: mvn package -Dmaven.test.skip

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'add-known-hosts-in-next-command'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy jar with rsync
        run: rsync -avP ./target/Football-1.0-SNAPSHOT-jar-with-dependencies.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/football-core_${GITHUB_SHA::8}.jar

      - name: Generate new crontab. First the crontab loads the environment variables from .environment, then runs the Core project, appending the output of the command to a log file.
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -q "echo '12 2 * * * . ~/.environment; java -cp ~/football-core_${GITHUB_SHA::8}.jar com.footballbettingcore.taskScheduling.PredictPipeline &>> ~/logs/predict.log' > ~/crontab.txt"

      - name: Set new crontab
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -q "crontab ~/crontab.txt"

      - name: Remove old jars, but keep the most recent in case there are any commands running. (The latest jar on the system is kept in the awk command and the jar from this deployment is ignored via the mmin arg)
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -q "find . -name 'football-core*' -mmin +5 -printf '%T@ %p\n' | sort -nr | cut -f 2 -d ' ' | awk 'NR>1' | xargs rm -f"
